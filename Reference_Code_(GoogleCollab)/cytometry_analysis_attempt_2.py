# -*- coding: utf-8 -*-
"""Cytometry_Analysis_Attempt_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dk_LgmzRzImv-tMM74zeqy1o8mVK_Ddd
"""

# Mount Google Drive
from google.colab import drive
drive.mount('/content/drive')

# Install the FlowCytometryTools library if not already installed
!pip install FlowCytometryTools

# Import necessary libraries
import os
import pandas as pd
from FlowCytometryTools import FCMeasurement
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
from matplotlib.backends.backend_pdf import PdfPages

# Set the path to the folder with your .fcs files in Google Drive
input_folder_path = '/content/drive/My Drive/RFCD'
output_folder_path = '/content/drive/My Drive/Analyzed_Flow_Cytometry_Data'

# Ensure the output folder exists
if not os.path.exists(output_folder_path):
    os.makedirs(output_folder_path)

# Analysis functions
def plothist(data, param, output_folder):
    plt.figure()
    sns.histplot(data[param], kde=True)
    plt.title('Distribution of ' + param)
    plt.xlabel('Value')
    plt.ylabel('Frequency')
    plt.savefig(os.path.join(output_folder, param + '_hist.pdf'))
    plt.close()

def plotscatter(data, param1, param2, output_folder):
    plt.figure()
    sns.scatterplot(x=data[param1], y=data[param2])
    plt.title(param1 + ' vs ' + param2)
    plt.xlabel(param1)
    plt.ylabel(param2)
    plt.savefig(os.path.join(output_folder, param1 + '_vs_' + param2 + '_scatter.pdf'))
    plt.close()

# Function to analyze a single file and save results as PDF
def analyze_file(file_path, output_folder):
    # Extract the base name of the file for naming the PDF
    base_name = os.path.splitext(os.path.basename(file_path))[0]
    pdf_path = os.path.join(output_folder, base_name + '.pdf')

    # Check if the PDF already exists and decide whether to overwrite or skip
    if os.path.exists(pdf_path):
        print(f"PDF for {base_name} already exists. Overwriting...")
        # If you decide not to overwrite, you can use 'continue' to skip to the next file
        # continue

    # Start a PDF document
    with PdfPages(pdf_path) as pdf:
        # Load the data
        sample = FCMeasurement(ID='TestSample', datafile=file_path)
        data = sample.data
        meta = sample.meta

        # Perform summary statistics and correlation matrix analysis
        summary_stats = data.describe()
        correlation_matrix = data.iloc[:,1:].corr()

        # Plot and save histograms and scatter plots for selected parameters
        plothist(data, 'Parameter1', output_folder)  # Replace 'Parameter1' with actual parameter name
        plotscatter(data, 'Parameter1', 'Parameter2', output_folder)  # Replace with actual parameter names

        # Save figures to PDF
        pdf.savefig()  # Save the current figure
        plt.close()    # Close the figure to avoid displaying it

# Iterate over files in the input folder and analyze them
for file_name in os.listdir(input_folder_path):
    if file_name.endswith('.fcs'):  # Check for .fcs files
        file_path = os.path.join(input_folder_path, file_name)
        analyze_file(file_path, output_folder_path)